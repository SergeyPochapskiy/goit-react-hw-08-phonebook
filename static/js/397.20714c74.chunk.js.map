{"version":3,"file":"static/js/397.20714c74.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactsList.styled.jsx","redux/contacts/selectors.jsx","components/ContactsList/ContactsList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/App.styled.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-family: sans-serif;\n  font-size: 30px;\n  line-height: 1.15;\n  font-weight: 700;\n  letter-spacing: 0.03em;\n`;","import { Title } from './Section.styled';\nexport const Section = ({ title, children }) => {\n  return (\n    <section>\n      <Title>{title}</Title>\n      {children}\n    </section>\n  );\n};","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.15;\n`;\n\nexport const FindInput = styled.input`\n  all: unset;\n  display: flex;\n  border: 2px solid #deaf85;\n  ${'' /* margin: auto; */}\n  padding: 15px;\n  font-size: 20px;\n  &:focus-visible {\n    border-radius: 4px;\n    border: 3px solid lightblue;\n  }\n`;","import { Label, FindInput } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filterSlice';\nimport PropTypes from 'prop-types';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const onWrite = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <FindInput\n       type=\"text\"\n       name=\"filter\" \n       onChange={onWrite} />\n    </Label>\n  );\n};\n\nLabel.propTypes = {\n  filter: PropTypes.string,\n};","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style-type: none;\n  margin: auto;\n  padding: 0;\n  width: 450px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 25px;\n  line-height: 1.15;\n  padding: 10px 0;\n  letter-spacing: 0.05em;\n`;\n\nexport const Button = styled.button`\n  box-shadow: inset 0px 0px 12px 3px #ffffff;\n  background: linear-gradient(to bottom, #deaf85 5%, #deaf85 100%);\n  background-color: #deaf85;\n  border-radius: 4px;\n  border: 2px solid #deaf85;\n  display: inline-block;\n  cursor: pointer;\n  color: #212121;\n  font-family: Arial;\n  font-size: 20px;\n  font-weight: bold;\n  padding: 16px 16px;\n  text-decoration: none;\n  &:hover {\n    background: linear-gradient(to bottom, #dfaf98 5%, #dfaf98 100%);\n    background-color: #212121;\n    color: #ffffff;\n  }\n`;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n    );\n  }\n);\n","import { List, Item, Button } from './ContactsList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport PropTypes from 'prop-types';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\n\n\n\n\n  export const ContactsList = () => {\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n  \n    const contactsFiltered = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n  const dispatch = useDispatch();\n\n  if (contactsFiltered) {\n  return (\n    <List>\n      {contactsFiltered.map(({ id, name, number }) => {\n        return (\n          <Item key={id}>\n            {name}: {number}\n            <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n              Delete\n            </Button>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n}\n\nList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    })\n  ),\n};","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormContact = styled(Form)`\n  border: 2px solid #deaf85;\n  width: 450px;\n  display: block;\n  padding: 15px;\n  margin: auto;\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  color: tomato;\n`;\n\nexport const Label = styled.label`\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.15;\n`;\n\nexport const Input = styled(Field)`\n  all: unset;\n  display: flex;\n  border: 2px solid #deaf85;\n  margin: 10px 0;\n  padding: 15px;\n  font-size: 20px;\n  &:focus-visible {\n    border-radius: 4px;\n    border: 3px solid lightblue;\n  }\n`;\n\nexport const Button = styled.button`\n  box-shadow: inset 0px 0px 12px 3px #ffffff;\n  background: linear-gradient(to bottom, #deaf85 5%, #deaf85 100%);\n  background-color: #ededed;\n  border-radius: 4px;\n  border: 2px solid #deaf85;\n  display: inline-block;\n  cursor: pointer;\n  color: #212121;\n  font-family: Arial;\n  font-size: 20px;\n  font-weight: bold;\n  padding: 16px 37px;\n  text-decoration: none;\n  margin: 10px 0;\n  &:hover {\n    background: linear-gradient(to bottom, #dfaf98 5%, #dfaf98 100%);\n    background-color: #212121;\n    color: #ffffff;\n  }\n`;","\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  FormContact,\n  Label,\n  Input,\n  Button,\n  ErrorText,\n} from './ContactForm.styled.jsx';\n\n\nconst nameValidate =\n  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\nconst phoneValidate = RegExp(\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{1,3}\\\\)[ \\\\-]*)|([0-9]{1,4})[ \\\\-]*)*?[0-9]{1,4}?[ \\\\-]*[0-9]{1,9}?$/\n);\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .required()\n    .min(3)\n    .max(16)\n    .matches(\n      nameValidate,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    ),\n  number: yup\n    .string()\n    .required()\n    .min(6)\n    .max(10)\n    .matches(\n      phoneValidate,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    ),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    contacts.find(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    )\n      ? alert(`${values.name} is already in contacts`)\n      : dispatch(addContact(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <FormContact autoComplete=\"off\">\n        <Label>\n          Name\n          <Input type=\"text\" name=\"name\"></Input>\n          <ErrorText component=\"div\" name=\"name\" />\n        </Label>\n        <Label>\n          Number\n          <Input type=\"tel\" name=\"number\"></Input>\n          <ErrorText component=\"div\" name=\"number\" />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </FormContact>\n    </Formik>\n  );\n};","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  margin: 16px;\n`;","import { Section } from '../components/Section/Section';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactsList } from '../components/ContactsList/ContactsList';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Wrap } from '../components/App.styled';\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { selectError, selectIsLoading, selectContacts, selectFilter } from '../redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\n\n\nexport default function App() {\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n\n  return (\n    <Wrap>\n      <Section title={`Phonebook`}></Section>\n      <ContactForm />\n      <Section title={`Contacts`}>\n        <Filter />\n        {isLoading && !error && <b>Loading...</b>}\n        {contacts.length > 0 && <ContactsList contacts={filter} />}\n      </Section>\n    </Wrap>\n  );\n}"],"names":["Title","styled","Section","title","children","Label","FindInput","Filter","dispatch","useDispatch","type","name","onChange","e","setFilter","currentTarget","value","propTypes","filter","PropTypes","List","Item","Button","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","ContactsList","createSelector","contact","toLowerCase","includes","trim","useSelector","contactsFiltered","map","id","number","onClick","deleteContact","FormContact","Form","ErrorText","ErrorMessage","Input","Field","phoneValidate","RegExp","schema","yup","shape","required","min","max","matches","initialValues","ContactForm","onSubmit","values","resetForm","find","alert","addContact","validationSchema","autoComplete","component","Wrap","App","useEffect","fetchContacts","length"],"sourceRoot":""}